<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
            xmlns:android="clr-namespace:Xamarin.Forms.PlatformConfiguration.AndroidSpecific;assembly=Xamarin.Forms.Core"
             xmlns:tools="clr-namespace:AideDeJeu.Tools"
             xmlns:libvm="clr-namespace:AideDeJeu.ViewModels.Library"
             xmlns:lib="clr-namespace:AideDeJeuLib"
             x:Class="AideDeJeu.Views.Library.BookmarksPage"
             x:Name="This"
             x:DataType="libvm:BookmarksViewModel"
             Title="Favoris"
             Icon="stars_stack.png">
    <ContentPage.BindingContext>
        <libvm:BookmarksViewModel />
    </ContentPage.BindingContext>
    <ContentPage.Resources>
        <ResourceDictionary>
            <tools:IntToBooleanConverter x:Key="IntToBooleanConverter" NonZeroValue="False" NullOrZeroValue="True" />
            <tools:HeaderLevelToStyleConverter x:Key="HeaderLevelToStyleConverter" />
            <tools:EventToCommandBehavior x:Key="EventToCommandBehavior" />
        </ResourceDictionary>
    </ContentPage.Resources>
    <ContentPage.ToolbarItems>
        <ToolbarItem Name="Configure" Text="Configurer" Order="Primary" Icon="settings_knobs.png" Command="{Binding BindingContext.ConfigureCommand, Source={x:Reference This}}" />
    </ContentPage.ToolbarItems>
    <ContentPage.Content>
        <Grid BackgroundColor="{AppThemeBinding Dark={StaticResource DarkHDWhite}, Light={StaticResource LightHDWhite}}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <Picker x:Name="BookmarkCollectionPicker" Grid.Column="0" Grid.Row="0" HorizontalOptions="Fill" ItemsSource="{Binding Repository.BookmarkCollectionNames, Mode=OneWay}" ItemDisplayBinding="{Binding Mode=OneWay}" SelectedIndex="{Binding Repository.BookmarkCollectionIndex, Mode=TwoWay}">
              <!--Style="{StaticResource heading1}"-->
              <Picker.Behaviors>
                    <tools:EventToCommandBehavior EventName="SelectedIndexChanged" Command="{Binding BindingContext.SelectedIndexChangedCommand, Source={x:Reference This}}" />
                </Picker.Behaviors>
            </Picker>

            <Label Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="2" HorizontalOptions="Center" VerticalOptions="Center" HorizontalTextAlignment="Center" VerticalTextAlignment="Center" Margin="15,0,15,0" Style="{StaticResource heading3}" Text="Cette liste est vide, ajoutez des éléments à partir de la bibliothèque !" IsVisible="{Binding Repository.BookmarkCollection.Count, Converter={StaticResource IntToBooleanConverter}}" />

            <!--SelectedItem="{Binding SelectedItem}"-->
            <ListView Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="2" x:Name="ItemsListView" SelectionMode="None" ItemsSource="{Binding Repository.BookmarkCollection}" VerticalOptions="FillAndExpand" HasUnevenRows="true" CachingStrategy="RecycleElement">
                <ListView.ItemTemplate>
                    <DataTemplate x:DataType="lib:Item">
                        <ViewCell>
                            <Grid Padding="10">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="auto" />
                                    <ColumnDefinition Width="auto" />
                                    <ColumnDefinition Width="auto" />
                                </Grid.ColumnDefinitions>

                                <Label Grid.Column="0" Text="{Binding Name}" LineBreakMode="WordWrap" TextColor="{StaticResource HDBlue}" Style="{Binding NameLevel,Converter={StaticResource HeaderLevelToStyleConverter}, ConverterParameter=2}" HorizontalOptions="Fill">
                                    <Label.GestureRecognizers>
                                        <TapGestureRecognizer Command="{Binding BindingContext.GotoItemCommand, Source={x:Reference This}}" CommandParameter="{Binding}" />
                                    </Label.GestureRecognizers>
                                </Label>

                                <Image Grid.Column="1" Source="trash_can.png" WidthRequest="32" HeightRequest="32">
                                    <Image.GestureRecognizers>
                                        <TapGestureRecognizer Command="{Binding BindingContext.RemoveItemCommand, Source={x:Reference This}}" CommandParameter="{Binding}" />
                                    </Image.GestureRecognizers>
                                </Image>
                                <Image Grid.Column="2" Source="plain_arrow_up.png" WidthRequest="32" HeightRequest="2">
                                    <Image.GestureRecognizers>
                                        <TapGestureRecognizer Command="{Binding BindingContext.MoveUpItemCommand, Source={x:Reference This}}" CommandParameter="{Binding}" />
                                    </Image.GestureRecognizers>
                                </Image>
                                <Image Grid.Column="3" Source="plain_arrow_down.png" WidthRequest="32" HeightRequest="32">
                                    <Image.GestureRecognizers>
                                        <TapGestureRecognizer Command="{Binding BindingContext.MoveDownItemCommand, Source={x:Reference This}}" CommandParameter="{Binding}" />
                                    </Image.GestureRecognizers>
                                </Image>
                            </Grid>
                            <!--<StackLayout Padding="10" Orientation="Vertical">
                                <Label Text="{Binding Name}" LineBreakMode="WordWrap" TextColor="{StaticResource HDBlue}" Style="{Binding NameLevel,Converter={StaticResource HeaderLevelToStyleConverter}, ConverterParameter=1}" />
                                --><!--<Label Text="{Binding Link}" LineBreakMode="WordWrap" TextColor="{StaticResource HDLightGrey}" Style="{Binding NameLevel,Converter={StaticResource HeaderLevelToStyleConverter}, ConverterParameter=4}" />--><!--
                            </StackLayout>-->
                        </ViewCell>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
            <ActivityIndicator 
                    Grid.Column="0" Grid.Row="0" 
                    VerticalOptions="StartAndExpand"
                    HorizontalOptions="End"
                    Color="{AppThemeBinding Dark={StaticResource DarkHDRed}, Light={StaticResource LightHDRed}}"
                    IsRunning="{Binding BindingContext.Main.IsLoading, Source={x:Reference This}}" 
                    IsVisible="{Binding BindingContext.Main.IsLoading, Source={x:Reference This}}">
                <ActivityIndicator.WidthRequest>
                    <OnPlatform x:TypeArguments="x:Double">
                        <On Platform="UWP" Value="400" />
                        <On Platform="iOS, Android" Value="50" />
                    </OnPlatform>
                </ActivityIndicator.WidthRequest>
                <ActivityIndicator.HeightRequest>
                    <OnPlatform x:TypeArguments="x:Double">
                        <On Platform="UWP" Value="10" />
                        <On Platform="iOS, Android" Value="50" />
                    </OnPlatform>
                </ActivityIndicator.HeightRequest>
            </ActivityIndicator>
        </Grid>
    </ContentPage.Content>
</ContentPage>